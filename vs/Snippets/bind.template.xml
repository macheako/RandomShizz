<?xml version="1.0" encoding="utf-8"?>
<CodeTemplates version="3.0">
  <CodeTemplate version="2.0">
    <Header>
      <_Group>Cobold</_Group>
      <Version />
      <MimeType>text/x-csharp</MimeType>
      <Shortcut>bind</Shortcut>
      <_Description>Bindable Property</_Description>
      <TemplateType>Expansion</TemplateType>
    </Header>
    <Variables>
      <Variable name="name">
        <Default>notset</Default>
      </Variable>
      <Variable name="type">
        <Default>notset</Default>
      </Variable>
      <Variable name="declType">
        <Default>notset</Default>
      </Variable>
    </Variables>
    <Code><![CDATA[//
// $name$Property
//
//////////////////////////////////////////
public static readonly BindableProperty $name$Property =
    BindableProperty.Create(
        "$name$",
        typeof($type$),
        typeof($declType$),
        default($type$),
        propertyChanged: (bindable, oldvalue, newvalue) =>
        {
            (bindable as $declType$).OnPropertyChanged(nameof($name$));
        });

public $type$ $name$
{
    get => ($type$)GetValue($name$Property);
    set => SetValue($name$Property, value);
}
$end$]]></Code>
  </CodeTemplate>
</CodeTemplates>